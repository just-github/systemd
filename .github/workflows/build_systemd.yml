name: kernel_systemd

env:
  workdir: /builder

on:
  push:

jobs:
  build-systemd:
    runs-on: ubuntu-20.04
    container:
      image: carterjones/manjaro
      volumes:
        - /dev:/dev
      options: --ulimit nofile=1024:10240 --privileged
    timeout-minutes: 720 # timeout 12h
    steps:
      - name: Install build dependencies
        shell: bash
        run: |
          echo "Y"| sudo pacman -Sy base-devel git pacman sudo \
          bc docbook-xsl pahole inetutils \
          xmlto cpio make

      - name: Initialize environment
        run: |
          echo HOME=/builder >> "$GITHUB_ENV"
          echo PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin >> "$GITHUB_ENV"
          sed -i "s/MAKEFLAGS=\"-j2\"/MAKEFLAGS=\"-j8\"/g" /etc/makepkg.conf
          cat /etc/makepkg.conf |grep "MAKEFLAGS="
          echo "PACKAGER=\"Yurii Huang <funningc0217@foxmail.com>\"" >> /etc/makepkg.conf
          cat /etc/makepkg.conf |grep "PACKAGER="
          echo "SRCDEST=/builder" >> /etc/makepkg.conf
          cat /etc/makepkg.conf |grep "SRCDEST="
          su - builder -c "mkdir -p ${{ env.workdir }}/src"
          env

      - name: Clone repository
        shell: bash
        working-directory: ${{ env.workdir }}/src
        run: |
          GITHUB_BRANCH=$(echo ${{ github.ref }}| cut -d'/' -f3)
          echo "GITHUB_BRANCH ${GITHUB_BRANCH}"
          su - builder -c "git clone https://github.com/${{ github.repository }}.git -b ${GITHUB_BRANCH} ${{ env.workdir }}/src/systemd"
          su - builder -c "cp ${{ env.workdir }}/src/systemd/pacman/* ${{ env.workdir}}/src"
          su - builder -c "cp ${{ env.workdir }}/src/systemd/pacman/* ${{ env.workdir}}"
          
      - name: Build
        shell: bash
        working-directory: ${{ env.workdir }}/src
        run: |
          su - builder -c "echo "Y"| makepkg -s PKGBUILD"
      
      - name: Sign
        shell: bash
        working-directory: ${{ env.workdir }}/src
        run: |
          if [ -z "${{ secrets.CALONG_GPG_PRI }}" ] || [ -z "${{ secrets.CALONG_GPG_PASSWD }}" ]; then
              echo "## gpg credentials not provided. Skip signing."
          else
              cat <(echo -e "${{ secrets.CALONG_GPG_PRI }}" | base64 --decode) | gpg --batch --import &>/dev/null
              for p in $(find $PWD -maxdepth 1 -regex '.*\.pkg\.tar\.\(xz\|zst\)'); do
                echo "## signing $p"
                gpg --pinentry-mode loopback --passphrase "${{ secrets.CALONG_GPG_PASSWD }}" --detach-sign ${p}
              done
          fi
          
      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ${{ env.workdir }}/*.pkg.tar.*
